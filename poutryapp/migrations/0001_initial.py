# Generated by Django 5.1.7 on 2025-06-30 20:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EggInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_eggs', models.PositiveIntegerField(default=0)),
                ('rejected_eggs', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('unit_of_measure', models.CharField(help_text='e.g., ml, tablets, kg', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('STOCK_MANAGER', 'Stock Manager'), ('WORKER', 'Worker'), ('DOCTOR', 'Doctor'), ('SALES_MANAGER', 'Doctor')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChickenHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of chickens this house can hold')),
                ('current_chicken_count', models.PositiveIntegerField(default=0)),
                ('age_in_weeks', models.PositiveIntegerField(default=0)),
                ('average_weight', models.FloatField(default=0.0, help_text='Average weight per chicken in kg')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chicken_houses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChickenDeathRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('number_dead', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True)),
                ('doctor_notes', models.TextField(blank=True)),
                ('possible_cause', models.CharField(blank=True, max_length=100)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='confirmed_deaths', to=settings.AUTH_USER_MODEL)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recorded_deaths', to=settings.AUTH_USER_MODEL)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.chickenhouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EggCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('full_trays', models.PositiveIntegerField(help_text='Number of full trays (30 eggs per tray)')),
                ('loose_eggs', models.PositiveIntegerField(default=0, help_text='Eggs not fitting in full trays')),
                ('rejected_eggs', models.PositiveIntegerField(default=0, help_text='Eggs not fit for sale')),
                ('stock_manager_confirmed', models.BooleanField(default=False)),
                ('stock_manager_confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.chickenhouse')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collected_eggs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EggSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity', models.PositiveIntegerField()),
                ('remained_eggs', models.PositiveIntegerField(default=0)),
                ('rejected_eggs', models.PositiveIntegerField(default=0)),
                ('price_per_egg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('buyer_name', models.CharField(max_length=100)),
                ('buyer_contact', models.CharField(blank=True, max_length=20)),
                ('confirm_received', models.BooleanField(default=False)),
                ('confirm_sales', models.BooleanField(default=False)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MPESA', 'M-Pesa'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque')], default='CASH', max_length=20)),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Cost per unit', max_digits=12)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, help_text='Number of units', max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poutryapp.expensecategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoodPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sacks_purchased', models.PositiveIntegerField()),
                ('price_per_sack', models.DecimalField(decimal_places=2, max_digits=10)),
                ('supplier', models.CharField(max_length=100)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('food_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.foodtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sacks_in_stock', models.PositiveIntegerField(default=0)),
                ('food_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.foodtype')),
            ],
            options={
                'verbose_name_plural': 'Food Inventories',
            },
        ),
        migrations.CreateModel(
            name='FoodDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sacks_distributed', models.DecimalField(decimal_places=2, max_digits=10)),
                ('worker_confirmed', models.BooleanField(default=False)),
                ('confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.chickenhouse')),
                ('distributed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='distributed_food', to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_food', to=settings.AUTH_USER_MODEL)),
                ('food_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.foodtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicineDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('doctor_confirmed', models.BooleanField(default=False)),
                ('worker_confirmed', models.BooleanField(default=False)),
                ('purpose', models.TextField(blank=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.chickenhouse')),
                ('distributed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='distributed_medicine', to=settings.AUTH_USER_MODEL)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.medicine')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_medicine', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicineInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity_in_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('medicine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.medicine')),
            ],
            options={
                'verbose_name_plural': 'Medicine Inventories',
            },
        ),
        migrations.CreateModel(
            name='MedicinePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('supplier', models.CharField(max_length=100)),
                ('expiry_date', models.DateField()),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.medicine')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalaryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MPESA', 'M-Pesa'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque')], default='CASH', max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recorded_salaries', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(limit_choices_to={'user_type': 'WORKER'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=10)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('before_state', models.JSONField(blank=True, null=True)),
                ('after_state', models.JSONField(blank=True, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log',
                'verbose_name_plural': 'System Logs',
                'ordering': ['-timestamp'],
            },
        ),
    ]
