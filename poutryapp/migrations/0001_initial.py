# Generated by Django 5.1.7 on 2025-05-30 20:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit', models.CharField(default='kg', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egg_count', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('recommended_age_days', models.PositiveIntegerField(help_text='Recommended age in days for vaccination')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('DOCTOR', 'Doctor'), ('WORKER', 'Worker'), ('SALES_MANAGER', 'Sales Manager'), ('CUSTOMER', 'Customer')], max_length=20)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChickenHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('house_type', models.CharField(choices=[('BROILER', 'Broiler'), ('LAYER', 'Layer'), ('BROODER', 'Brooder')], max_length=20)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of chickens this house can hold')),
                ('current_chicken_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_cleaned', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('worker', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'WORKER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chicken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chicken_type', models.CharField(choices=[('BROILER', 'Broiler'), ('LAYER', 'Layer')], max_length=20)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_alive', models.BooleanField(default=True)),
                ('date_of_death', models.DateField(blank=True, null=True)),
                ('cause_of_death', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chickens', to='poutryapp.chickenhouse')),
            ],
        ),
        migrations.CreateModel(
            name='EggCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateField(default=django.utils.timezone.now)),
                ('total_eggs', models.PositiveIntegerField()),
                ('broken_eggs', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='egg_collections', to='poutryapp.chickenhouse')),
                ('collected_by', models.ForeignKey(limit_choices_to={'user_type': 'WORKER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('FOOD', 'Food'), ('VACCINE', 'Vaccine'), ('EQUIPMENT', 'Equipment'), ('UTILITY', 'Utility'), ('SALARY', 'Salary'), ('OTHER', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('recorded_by', models.ForeignKey(limit_choices_to={'user_type__in': ['ADMIN', 'SALES_MANAGER']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('distribution_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_distributions', to='poutryapp.chickenhouse')),
                ('distributed_by', models.ForeignKey(limit_choices_to={'user_type__in': ['ADMIN', 'WORKER']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.food')),
            ],
        ),
        migrations.CreateModel(
            name='FoodPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_date', models.DateField(default=django.utils.timezone.now)),
                ('supplier', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.food')),
            ],
        ),
        migrations.CreateModel(
            name='HealthReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField(default=django.utils.timezone.now)),
                ('healthy_count', models.PositiveIntegerField()),
                ('sick_count', models.PositiveIntegerField()),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('treatment', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_reports', to='poutryapp.chickenhouse')),
                ('reported_by', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_type', models.CharField(choices=[('EGG', 'Egg'), ('CHICKEN', 'Chicken'), ('MEAT', 'Meat'), ('OTHER', 'Other')], max_length=20)),
                ('sale_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_received', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'CUSTOMER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to=settings.AUTH_USER_MODEL)),
                ('sales_manager', models.ForeignKey(limit_choices_to={'user_type': 'SALES_MANAGER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sellers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egg_trays', models.PositiveIntegerField(default=0)),
                ('egg_singles', models.PositiveIntegerField(default=0)),
                ('egg_price_per_tray', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('chicken_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('item_description', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('chicken', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poutryapp.chicken')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='poutryapp.sale')),
            ],
        ),
        migrations.CreateModel(
            name='VaccinationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_administered', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('administered_by', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('chicken_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccinations', to='poutryapp.chickenhouse')),
                ('vaccine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poutryapp.vaccine')),
            ],
        ),
    ]
